name: CI/CD Vite Project

on:
  pull_request:
    branches:
      - production
      - prodlike

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: |
        npm ci

    - name: Build project
      run: |
        npm run build

    - name: Deploy to Server
      run: |
        # Tentukan server, SSH key, dan username berdasarkan branch pull request
        if [ "${{ github.base_ref }}" == "production" ]; then
          SERVER="${{ secrets.PROD_SERVER }}" # Ambil IP server production dari GitHub Secrets
          SSH_KEY="${{ secrets.SSH_PRIVATE_KEY_PROD }}" # Ambil SSH key server production dari GitHub Secrets
          USERNAME="${{ secrets.PROD_USERNAME }}" # Ambil username server production dari GitHub Secrets
        elif [ "${{ github.base_ref }}" == "prodlike" ]; then
          SERVER="${{ secrets.PRODLIKE_SERVER }}" # Ambil IP server prodlike dari GitHub Secrets
          SSH_KEY="${{ secrets.SSH_PRIVATE_KEY_PRODLIKE }}" # Ambil SSH key server prodlike dari GitHub Secrets
          USERNAME="${{ secrets.PRODLIKE_USERNAME }}" # Ambil username server prodlike dari GitHub Secrets
        else
          echo "Branch tidak dikenali, proses deploy dibatalkan."
          exit 1
        fi

        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$SERVER" >> ~/.ssh/known_hosts

        # Transfer file hasil build ke folder root dengan folder sibiti-frontend menggunakan rsync
        # rsync -avz --delete --exclude='node_modules' --exclude='.git' dist/ $USERNAME@$SERVER:~/sibiti-frontend
           rsync -avz --delete --exclude='node_modules' --exclude='.git' dist/ package.json package-lock.json $USERNAME@$SERVER:~/sibiti-frontend

    - name: Restart PM2
      run: |
        # Tentukan server, SSH key, dan username berdasarkan branch pull request
        if [ "${{ github.base_ref }}" == "production" ]; then
          SERVER="${{ secrets.PROD_SERVER }}" # Ambil IP server production dari GitHub Secrets
          SSH_KEY="${{ secrets.SSH_PRIVATE_KEY_PROD }}" # Ambil SSH key server production dari GitHub Secrets
          PM2_NAME="smansa-prod"
          USERNAME="${{ secrets.PROD_USERNAME }}" # Ambil username server production dari GitHub Secrets
        elif [ "${{ github.base_ref }}" == "prodlike" ]; then
          SERVER="${{ secrets.PRODLIKE_SERVER }}" # Ambil IP server prodlike dari GitHub Secrets
          SSH_KEY="${{ secrets.SSH_PRIVATE_KEY_PRODLIKE }}" # Ambil SSH key server prodlike dari GitHub Secrets
          PM2_NAME="smansa-prodlike"
          USERNAME="${{ secrets.PRODLIKE_USERNAME }}" # Ambil username server prodlike dari GitHub Secrets
        else
          echo "Branch tidak dikenali, proses restart PM2 dibatalkan."
          exit 1
        fi

        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$SERVER" >> ~/.ssh/known_hosts

        ssh -i ~/.ssh/id_rsa $USERNAME@$SERVER '
          cd ~/sibiti-frontend;
          if command -v pm2 >/dev/null 2>&1; then
            if pm2 list | grep -q "$PM2_NAME"; then
              pm2 restart "$PM2_NAME";
            else
              pm2 start npm --name "$PM2_NAME" -- run start;
            fi
          else
            npm install -g pm2;
            pm2 start npm --name "$PM2_NAME" -- run start;
          fi
          pm2 save; # Simpan konfigurasi PM2 untuk memastikan proses otomatis di-restart setelah server reboot
        '
